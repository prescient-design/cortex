[project]
name = "pytorch-cortex"
dynamic = ["version"]
readme = "README.md"
description = "A modular architecture for deep learning systems."
authors = [{name = "Samuel Stanton", email = "stanton.samuel@gene.com"}]
classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.10"
dependencies = [
    "boto3>=1.37.1",
    "botorch>=0.9.4",
    "cachetools>=5.5.2",
    "edlib>=1.3.9.post1",
    "hydra-core>=1.2.0",
    "lightning>=2.0",
    "numpy>=2",
    "omegaconf>=2.3.0",
    "pandas>=2",
    "pyarrow>=19.0.1",
    "pytorch-warmup>=0.2.0",
    "s3fs>=2025.3.2",
    "tabulate>=0.9.0",
    "torch>=2.5.1",
    "torchvision",
    "tqdm>=4.67.1",
    "transformers>=4.24.0",
    "universal-pathlib>=0.2.6",
    "wandb>=0.19.9",
]

[project.scripts]
cortex_train_model = "cortex.cmdline.train_cortex_model:main"
cortex_finetune_model = "cortex.cmdline.finetune_cortex_model:main"
cortex_generate_designs = "cortex.cmdline.generate_designs:main"


[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["cortex*"]

[tool.setuptools.package-data]
"cortex.config.hydra" = ["*.yaml"]
"cortex.assets" = ["*.txt"]

[tool.setuptools_scm]
search_parent_directories = true
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"
fallback_version = "0.0.0"

[tool.ruff]
line-length = 120
extend-exclude = [
  "*.ipynb",
  "**/torchinductor/**/*.py",
  "notebooks",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # requires python >= 3.10
    "B007",  # unused-loop-control-variable
    "E741",  # ambiguous-variable-name
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # MODULE IMPORTED BUT UNUSED
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "ipython>=8.34.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.0",
    "sphinx>=8.1.3",
    "sphinx-autoapi>=3.6.0",
    "sphinx-rtd-theme>=3.0.2",
]
